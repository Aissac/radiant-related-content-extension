<div id="related_content_wrapper" class="clearfix"> 
  <label for="related_content">Related content</label>
  <%= text_field_tag "related_content" %>
  <ol id="related_content_container">
  <% @page.related_pages.each do |related| %>
    <li class="related_page" id="related_<%= related.id %>">
      <img src="/images/admin/reorder.png" alt="reorder" class="reorder" />
      <%=related.title%>
      <%= link_to_function '<img src="/images/admin/minus.png" alt="Delete" />', "RelatedContent.remove('#{related.id}');", :confirm => "Are you sure you want to remove this related page?" %>
    </li>
  <% end %>
  </ol>
  <p id="deleted" class="related_notice" style="display:none;">Removed related content will be deleted when you save this page.</p>
  <p id="added" class="related_notice" style="display:none;">New added related content will be saved when you save this page.</p>
</div>
<% content_for :page_scripts do %>
	var RelatedContent = {
		remove: function(id){
			RelatedContent.unadd(id);
			new Insertion.Bottom('related_content', '<input name="page[delete_relations][]" value="'+id+'"/>');
			$('deleted').show();
			return false;
		},
		add: function(id, title){
			var template = new Template(<%= render(:partial => "add_related").to_json %>);
			new Insertion.Bottom('related_content_container', template.evaluate({id: id, title: title}));
			$('added').show();
			return false;
		},
		unadd: function(id) {
			$('related_'+id).remove();
			return false;
		}
	};
	var RelatedContentSelector = Behavior.create({
	  initialize: function(){
	    this._createAutocompleteDiv();
	    new Ajax.Autocompleter(this.element.id, 
	                           this.autoCompleteDiv.id, 
	                           <%= related_pages_path.to_json %>,
	                           { updateElement: this.addRelatedPage });
	  },
	  
	  _createAutocompleteDiv: function(){
	    this.autoCompleteDiv = $div({ 'id' : 'related_content_ac', 'class' : 'auto_complete', 'style' : 'display:none;' });
	    this.element.parentNode.appendChild(this.autoCompleteDiv);
	  },
	  
	  addRelatedPage: function(element){
	    id = element.id;
	    title = element.down('span.title').innerHTML;
	    $('related_content').value = '';
	    RelatedContent.add(id, title);
	  }
	});
	Event.addBehavior({
	  '#related_content': RelatedContentSelector
	  });
<% end %>
<%= auto_complete_stylesheet %>
<%= sortable_element 'related_content_container' , 
  :url => { :action => "sort", :id => @page.id },
  :handle => 'reorder' ,
  :complete => visual_effect(:highlight, ' related_content_container ' ) 
%>
